#This single deployment will have 2 containers
#running in the same pod.
version: '3'
services:
    nginx:
        build:
            dockerfile: Dockerfile.dev
            context: ./nginx
        restart: always
        ports:
            - '80:80'
            - '443:443'
        depends_on: 
            - api_java
    api_java:
        build: 
            dockerfile: Dockerfile.dev
            context: ./api
        expose: 
            - '8080'            
        restart: always
        environment:
            - MYSQL_HOST=mysql
            - MYSQL_DATABASE=api
            - MYSQL_USER=safir
            - MYSQL_PASSWORD=password
            - REDIS_HOST=redis
            - REDIS_PORT=6379
            - COUNTER_HOST=counter
            - COUNTER_PORT=3070
        depends_on: 
            - mysql
            - redis
    counter:
        build: 
            dockerfile: Dockerfile.dev
            context: ./counter
        volumes: 
            - /app/node_modules
            - ./counter:/app
        restart: always
        depends_on: 
            - redis
        expose:
            - '3070'
        environment:
            - REDIS_HOST=redis
            - REDIS_PORT=6379            
    redis:
        image: 'redis:latest'   
        ports:
            - '6379:6379' # needed to access from local machine
        expose:
            - '6379'                
    mysql:
        image: 'mysql:latest'
        restart: always
        environment:
            - MYSQL_DATABASE=api
            - MYSQL_USER=safir
            - MYSQL_PASSWORD=password
            - MYSQL_ROOT_PASSWORD=rootpassword
        ports:
            - '3306:3306'
        expose:
            - '3306'
        volumes:
            - ./my-db-file:/var/lib/mysql           